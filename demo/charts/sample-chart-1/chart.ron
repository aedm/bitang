Chart(
    images: [
        Image(
            id: "color",
            format: Rgba16F,
            size: CanvasRelative(1.0),
            has_mipmaps: true,
        ),
        Image(
            id: "dof",
            format: Rgba16F,
            size: CanvasRelative(1.0),
            has_mipmaps: true,
        ),
        Image(
            id: "color-gamma",
            format: Rgba16F,
            size: CanvasRelative(1.0),
            has_mipmaps: true,
        ),
        Image(
            id: "depth",
            format: Depth32F,
            size: CanvasRelative(1.0),
        ),
        Image(
            id: "shadow",
            format: Depth32F,
            size: Fixed(4096, 4096),
        ),
        Image(
            id: "dof",
            format: Rgba16F,
            size: CanvasRelative(1.0),
        ),
        Image(
            id: "gaussian-horizontal",
            format: Rgba16F,
            size: CanvasRelative(0.125),
        ),
        Image(
            id: "gaussian",
            format: Rgba16F,
            size: CanvasRelative(0.125),
        ),
    ],
    simulation_precalculation_time: 0,
    buffers: [
        Buffer(
            id: "particles",
            item_size_in_vec4: 3,
            item_count: 256,
        ),
    ],    
    steps: [
        Compute(
            id: "particles-init",
            shader: "particles-init.cs.wgsl",
            run: Init("particles"),
            buffers: {
                "particles": Next("particles"),
            },
        ),
		Compute(
			id: "particles-simulate",
			shader: "particles-simulate.cs.wgsl",
			run: Simulation("particles"),
			buffers: {
				"particles_current": Current("particles"),
				"particles_next": Next("particles"),
			},
		),        
        Draw(
            id: "pass1",
            passes: [
                Pass(
                    id: "shadow",
                    depth_image: Image("shadow"),
                    color_images: [],
                ),
                Pass(
                    id: "solid",
                    depth_image: Image("depth"),
                    color_images: [Image("color")],
                    clear_color: (0, 0.37, 0, 0),
                ),
            ],
            items: [
                Object(
                    id: "backdrop",
                    mesh_file: "plane_xz.glb",
                    mesh_name: "Plane",
                    material: Material(
                        passes: {
                            "solid": MaterialPass(
                                vertex_shader: "backdrop.wgsl",
                                fragment_shader: "backdrop.wgsl",
                                depth_test: false,
                                depth_write: false,
                            ),
                        },
                        textures: {
                            "envmap": Texture(
                                bind: File(
                                    "medieval_cafe_1k.jxl",
                                ),
                            ),
                        },
                    ),
                ),


                Object(
                    id: "duck",
                    mesh_file: "/duck/duck.glb",
                    mesh_name: "Duck_002",
                    material: Material(
                        passes: {
                            "shadow": MaterialPass(
                                vertex_shader: "vs.wgsl",
                                fragment_shader: "fs-noop.wgsl",
                                depth_test: true,
                                depth_write: true,
                            ),
                            "solid": MaterialPass(
                                vertex_shader: "vs.wgsl",
                                fragment_shader: "fs.wgsl",
                                depth_test: true,
                                depth_write: true,
                            ),
                        },

                        buffers: {
                            "particles_current": Current("particles"),
                            "particles_next": Next("particles"),
                        },

                        textures: {
                            "shadow": Texture(
                                bind: Image(
                                    "shadow",
                                ),
                            ),
                            "envmap": Texture(
                                bind: File(
                                    "medieval_cafe_1k.jxl",
                                ),
                            ),
                            "base_color_map": Texture(
                                bind: File(
                                    "/duck/Duck_002_Albedo.png",
                                ),
                            ),
                            "roughness_map": Texture(
                                bind: File(
                                    "/duck/Duck_002_Roughness.png",
                                ),
                            ),
                            "metallic_map": Texture(
                                bind: File(
                                    "/duck/Duck_002_Metallic.png",
                                ),
                            ),
                            "normal_map": Texture(
                                bind: File(
                                    "/duck/Duck_002_Normal.png",
                                ),
                            ),
                            "brdf_lut": Texture(
                                bind: File(
                                    "ibl_brdf_lut.png",
                                ),
                            ),
                            "lightmap": Texture(
                                bind: File(
                                    "lightmap.png",
                                ),
                            ),
                        },
                    ),
                ),
            ],
        ),

       // Depth of field
       Draw(
           id: "depth-of-field",
           passes: [
               Pass(
                   id: "solid",
                   color_images: [Image("dof")],
                   clear_color: (0, 0.37, 0, 0),
               ),
           ],
           items: [
               Object(
                   id: "shader",
                   mesh_file: "plane_xz.glb",
                   mesh_name: "Plane",
                   material: Material(
                       passes: {
                           "solid": MaterialPass(
                               vertex_shader: "/shaders/fullscreen.vs.wgsl",
                               fragment_shader: "/shaders/post/dof-singlepass.fs.wgsl",
                               depth_test: false,
                               depth_write: false,
                           ),
                       },
                       textures: {
                           "color_texture": Texture(
                               bind: Image("color"),
                           ),
                           "depth_texture": Texture(
                               bind: Image("depth"),
                           ),
                       },
                   ),
               ),
           ],
       ),

       // Gamma compression
       Draw(
           id: "gamma-compression",
           passes: [
               Pass(
                   id: "solid",
                   color_images: [Image("color-gamma")],
                   clear_color: (0, 0.37, 0, 0),
               ),
           ],
           items: [
               Object(
                   id: "shader",
                   mesh_file: "plane_xz.glb",
                   mesh_name: "Plane",
                   material: Material(
                       passes: {
                           "solid": MaterialPass(
                               vertex_shader: "/shaders/fullscreen.vs.wgsl",
                               fragment_shader: "/shaders/post/gamma_compress.fs.wgsl",
                               depth_test: false,
                               depth_write: false,
                           ),
                       },
                       textures: {
                           "base_color": Texture(
                               bind: Image("color"),
                           ),
                       },
                   ),
               ),
           ],
       ),

       GenerateMipLevels(
           id: "mip1",
           image_id: "color-gamma",
       ),

       // Gaussian convolution
       Draw(
           id: "gaussian-horizontal",
           passes: [
               Pass(
                   id: "solid",
                   color_images: [Image("gaussian-horizontal")],
                   clear_color: (0, 0.37, 0, 0),
               ),
           ],
           items: [
               Object(
                   id: "shader",
                   mesh_file: "plane_xz.glb",
                   mesh_name: "Plane",
                   material: Material(
                       passes: {
                           "solid": MaterialPass(
                               vertex_shader: "/shaders/fullscreen.vs.wgsl",
                               fragment_shader: "/shaders/post/gauss_horizontal.fs.wgsl",
                               depth_test: false,
                               depth_write: false,
                           ),
                       },
                       textures: {
                           "base_color": Texture(
                               bind: Image("color-gamma"),
                           ),
                       },
                   ),
               ),
           ],
       ),
       Draw(
           id: "gaussian-vertical",
           passes: [
               Pass(
                   id: "solid",
                   color_images: [Image("gaussian")],
                   clear_color: (0, 0.37, 0, 0),
               ),
           ],
           items: [
               Object(
                   id: "shader",
                   mesh_file: "plane_xz.glb",
                   mesh_name: "Plane",
                   material: Material(
                       passes: {
                           "solid": MaterialPass(
                               vertex_shader: "/shaders/fullscreen.vs.wgsl",
                               fragment_shader: "/shaders/post/gauss_vertical.fs.wgsl",
                               depth_test: false,
                               depth_write: false,
                           ),
                       },
                       textures: {
                           "base_color": Texture(
                               bind: Image("gaussian-horizontal"),
                           ),
                       },
                   ),
               ),
           ],
       ),


       // Final composition
       Draw(
           id: "compose",
           passes: [
               Pass(
                   id: "solid",
                   color_images: [Image("screen")],
                   clear_color: (0, 0.37, 0, 0),
               ),
           ],
           items: [
               Object(
                   id: "compose",
                   mesh_file: "plane_xz.glb",
                   mesh_name: "Plane",
                   material: Material(
                       passes: {
                           "solid": MaterialPass(
                               vertex_shader: "/shaders/fullscreen.vs.wgsl",
                               fragment_shader: "/shaders/post/compose.fs.wgsl",
                               depth_test: false,
                               depth_write: false,
                           ),
                       },
                       textures: {
                           "base_color": Texture(
                               bind: Image("dof"),
                           ),
                           "glow_map": Texture(
                               bind: Image("gaussian"),
                           ),
                       },
                   ),
               ),
           ],
       ),
    ],
)