Chart(
    images: [
        Image(
            id: "color",
            format: Rgba16F,
            size: CanvasRelative(1.0),
        ),
        Image(
            id: "color-gamma",
            format: Rgba16F,
            size: CanvasRelative(1.0),
            has_mipmaps: true,
        ),
        Image(
            id: "depth",
            format: Depth32F,
            size: CanvasRelative(1.0),
        ),
        Image(
            id: "shadow",
            format: Depth32F,
            size: Fixed(4096, 4096),
        ),
        Image(
            id: "dof",
            format: Rgba16F,
            size: CanvasRelative(1.0),
        ),
        Image(
            id: "gaussian-horizontal",
            format: Rgba16F,
            size: CanvasRelative(0.125),
        ),
        Image(
            id: "gaussian",
            format: Rgba16F,
            size: CanvasRelative(0.125),
        ),
    ],
    simulation_precalculation_time: 0,
    steps: [
        Draw(
            id: "pass1",
            passes: [
                Pass(
                    id: "shadow",
                    depth_image: Image("shadow"),
                    color_images: [],
                ),
                Pass(
                    id: "solid",
                    depth_image: Image("depth"),
                    color_images: [Image("color")],
                    clear_color: (0, 0.37, 0, 0),
                ),
            ],
            items: [
                Object(
                    id: "backdrop",
                    mesh_file: "plane_xz.glb",
                    mesh_name: "Plane",
                    material: Material(
                        passes: {
                            "solid": MaterialPass(
                                vertex_shader: "backdrop.vs.glsl",
                                fragment_shader: "backdrop.fs.glsl",
                                depth_test: false,
                                depth_write: false,
                            ),
                        },
                        samplers: {
                            "envmap": Sampler(
                                bind: File(
                                    "medieval_cafe_1k.jxl",

                                ),
                                address_mode: Envmap,
                            ),
                        },
                    ),
                ),
                Scene(
                    id: "sample scene",
                    file: "demo-default.glb",
                    material: Material(
                        passes: {
                            "shadow": MaterialPass(
                                vertex_shader: "vs.glsl",
                                fragment_shader: "fs-noop.glsl",
                                depth_test: true,
                                depth_write: true,
                            ),
                            "solid": MaterialPass(
                                vertex_shader: "vs.glsl",
                                fragment_shader: "fs.glsl",
                                depth_test: true,
                                depth_write: true,
                            ),
                        },
                        samplers: {
                            "shadow": Sampler(
                                bind: Image(
                                    "shadow",
                                ),
                                mode: Shadow,
                            ),
                            "envmap": Sampler(
                                bind: File(
                                    "medieval_cafe_1k.jxl",
                                ),
                                mode: Envmap,
                            ),
                            "base_color_map": Sampler(
                                bind: File(
                                    "chip-material/Chip001_1K-PNG_Color.jpg",
                                ),
                                mode: Repeat,
                            ),
                            "roughness_map": Sampler(
                                bind: File(
                                    "chip-material/Chip001_1K-PNG_Roughness.jpg",
                                ),
                                mode: Repeat,
                            ),
                            "metallic_map": Sampler(
                                bind: File(
                                    "chip-material/Chip001_1K-PNG_Metalness.jpg",
                                ),
                                mode: Repeat,
                            ),
                            "normal_map": Sampler(
                                bind: File(
                                    "chip-material/Chip001_1K-PNG_NormalDX.jpg",
                                ),
                                mode: Repeat,
                            ),
                            "brdf_lut": Sampler(
                                bind: File(
                                    "ibl_brdf_lut.png",
                                ),
                                mode: ClampToEdge,
                            ),
                            "noise_map": Sampler(
                                bind: File(
                                    "noiseTexture.png",
                                ),
                                mode: Repeat,
                            ),
                        },
                    ),
                ),
            ],
        ),

        // Gamma compression
        Draw(
            id: "gamma-compression",
            passes: [
                Pass(
                    id: "solid",
                    color_images: [Image("color-gamma")],
                    clear_color: (0, 0.37, 0, 0),
                ),
            ],
            items: [
                Object(
                    id: "gamma-compression",
                    mesh_file: "plane_xz.glb",
                    mesh_name: "Plane",
                    material: Material(
                        passes: {
                            "solid": MaterialPass(
                                vertex_shader: "/shaders/post/compose.vs.glsl",
                                fragment_shader: "/shaders/post/gamma_compress.fs.glsl",
                                depth_test: false,
                                depth_write: false,
                            ),
                        },
                        samplers: {
                            "base_color": Sampler(
                                bind: Image("color"),
                                address_mode: ClampToEdge,
                            ),
                        },
                    ),
                ),
            ],
        ),

        GenerateMipLevels(
            id: "mip1",
            image_id: "color-gamma",
        ),


        // Final composition
        Draw(
            id: "compose",
            passes: [
                Pass(
                    id: "solid",
                    color_images: [Image("screen")],
                    clear_color: (0, 0.37, 0, 0),
                ),
            ],
            items: [
                Object(
                    id: "compose",
                    mesh_file: "plane_xz.glb",
                    mesh_name: "Plane",
                    material: Material(
                        passes: {
                            "solid": MaterialPass(
                                vertex_shader: "/shaders/post/compose.vs.glsl",
                                fragment_shader: "/shaders/post/compose.fs.glsl",
                                depth_test: false,
                                depth_write: false,
                            ),
                        },
                        samplers: {
                            "base_color": Sampler(
                                bind: Image("color-gamma"),
                                address_mode: ClampToEdge,
                            ),
                        },
                    ),
                ),
            ],
        ),
    ],
)